name: Redis Implementation Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: 📦 Setup Redis CLI
      run: |
        Write-Host "Installing Redis via Chocolatey..."
        choco install redis-64 -y
        
        # Wait for installation to complete
        Start-Sleep -Seconds 5
        
        # Check what's actually in the redis-64 directory
        Write-Host "Checking redis-64 package contents..."
        $redisPackagePath = "C:\ProgramData\chocolatey\lib\redis-64"
        if (Test-Path $redisPackagePath) {
          Write-Host "Contents of redis-64 package:"
          Get-ChildItem $redisPackagePath -Recurse | ForEach-Object {
            Write-Host "  $($_.FullName)"
          }
        }
        
        # Try direct choco list
        Write-Host ""
        Write-Host "Checking choco list..."
        choco list --local-only redis
        
        # Check if redis-cli is available as a shim
        Write-Host ""
        Write-Host "Checking for redis-cli in PATH..."
        Get-Command redis-cli -ErrorAction SilentlyContinue | ForEach-Object {
          Write-Host "Found redis-cli at: $($_.Source)"
        }
        
        exit 1
      shell: pwsh
      
    - name: 🔨 Restore dependencies
      run: dotnet restore
      
    - name: 🏗️ Build project
      run: dotnet build --configuration Release --no-restore
      
    - name: 🧪 Run tests
      run: |
        # Ensure redis-cli is in PATH for this step
        $possiblePaths = @(
          "C:\Program Files\Redis",
          "C:\ProgramData\chocolatey\lib\redis-64\tools",
          "C:\tools\redis"
        )
        
        foreach ($path in $possiblePaths) {
          if (Test-Path "$path\redis-cli.exe") {
            $env:PATH = "$path;$env:PATH"
            Write-Host "Added Redis to PATH: $path"
            break
          }
        }
        
        Write-Host "Running test suite..."
        .\run-tests.ps1 -Verbose -ContinueOnFailure
      shell: pwsh
      
    - name: 📊 Test Summary
      if: always()
      run: |
        Write-Host ""
        Write-Host "Test execution completed. Check logs above for details."
      shell: pwsh

  test-linux:
    name: Run Tests (Linux)
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: 📦 Setup Redis
      run: |
        sudo apt-get update
        sudo apt-get install -y redis-tools redis-server
        redis-cli --version
        
    - name: 🔨 Restore dependencies
      run: dotnet restore
      
    - name: 🏗️ Build project
      run: dotnet build --configuration Release --no-restore
      
    - name: 🧪 Run basic connectivity test
      run: |
        echo "Starting Redis server..."
        dotnet run --configuration Release -- --port 6379 &
        SERVER_PID=$!
        
        sleep 2
        
        echo "Testing PING command..."
        redis-cli -p 6379 PING || echo "PING test failed"
        
        echo "Testing ECHO command..."
        redis-cli -p 6379 ECHO "Hello" || echo "ECHO test failed"
        
        echo "Stopping server..."
        kill $SERVER_PID || true
      shell: bash
